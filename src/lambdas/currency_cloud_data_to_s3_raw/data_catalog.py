column_comments = {
    "currencycloud_accounts": {
        "id": "Account ID",
        "account_name": "Account name",
        "brand": "The value of this field is used for white labeling the Currencycloud user interface.",
        "your_reference": "User-generated reference code",
        "status": "Account status",
        "street": "First line of address",
        "city": "City",
        "state_or_province": "State or province two-letter ISO 3166 code. Only applicable to some countries.",
        "country": "Two-letter ISO country code",
        "postal_code": "Postal code",
        "spread_table": "The name of the spread table assigned to the account",
        "legal_entity_type": "The type of entity - individual or company",
        "created_at": "The date/time the account was created",
        "updated_at": "The date/time the account was last updated",
        "identification_type": "The legal document that verifies the identity of the account owner, e.g. passport.",
        "identification_value": "The unique reference code for the identification document, e.g. passport number",
        "short_reference": "The account's reference number.",
        "api_trading": "Is trading via the Currencycloud API enabled?",
        "online_trading": "Is trading via Currencycloud Direct enabled?",
        "phone_trading": "Is trading via phone enabled?",
        "process_third_party_funds": "Is the account enabled for third party funds?",
        "settlement_type": "The settlement type - bulk or net.",
        "terms_and_conditions_accepted": "Have the terms and conditions been accepted?",
        "agent_or_reliance": "True for clients using Currencycloud regulatory coverage, false otherwise.",
        "bank_account_verified": "Has the bank account been verified?",
        "timestamp_extracted": "the date/time code processes",
        "record_format": "format of the record",
        "extract_url": "url of the data integrated from the website ",
        "table_name": "table name of athena has been created-currencycloud_accounts ",
        "date":"date of the record ingested from website"
    },
     "currencycloud_balances": {
        "id": "Balance UUID",
        "account_id": "Account UUID",
        "currency": "Three-letter ISO currency code for the currency the amount is shown in",
        "amount": "The balance amount.",
        "created_at": "Date/time the record was created.",
        "updated_at": "Date/time the record was last updated.",
        "timestamp_extracted": "the date/time code processes",
        "record_format": "format of the record",
        "extract_url": "url of the data integrated from the website ",
        "table_name": "table name of athena has been created-currencycloud_balances ",
        "date":"date of the record ingested from website"
    },
    "currencycloud_beneficiaries": {
        "id": "Beneficiary UUID",
        "bank_account_holder_name": "Bank account holder's name.",
        "name": "Beneficiary's name",
        "email": "Beneficiary's email address",
        "payment_types": "The payment type - regular (local) or priority (SWIFT).",
        "beneficiary_address": "Line of address.",
        "beneficiary_country": "Two-letter ISO country code",
        "beneficiary_entity_type": "Beneficiary legal entity type - company or individual.",
        "beneficiary_company_name": "For companies",
        "beneficiary_first_name": "For individuals",
        "beneficiary_last_name": "For individuals",
        "beneficiary_city": "City",
        "beneficiary_postcode": "Postal code",
        "beneficiary_state_or_province": "State or province.",
        "beneficiary_date_of_birth": "For companies, this is the foundation date of the company. For individuals, it is their date of birth.",
        "beneficiary_identification_type": "A legal document that verifies the identity of the beneficiary.",
        "beneficiary_identification_value": "A unique reference code for the identification document, such as a passport number.",
        "bank_country": "Two-letter ISO code for the country in which the beneficiary's bank account is held.",
        "bank_name": "Bank name",
        "bank_account_type": "Bank account type.",
        "currency": "Currency in which money is held in the beneficiary's bank account. Three-digit currency code",
        "account_number": "Bank account number.",
        "routing_code_type_1": "Local payment routing system",
        "routing_code_value_1": "Value for routing_code_type_1",
        "routing_code_type_2": "Local payment routing system.",
        "routing_code_value_2": "Value for routing_code_type_2",
        "bic_swift": "BIC/SWIFT code",
        "iban": "IBAN code",
        "default_beneficiary": "Payments are made automatically to default beneficiaries when a beneficiary is not specified.",
        "creator_contact_id": "Contact UUID of beneficiary creator.",
        "bank_address": "Line of address",
        "created_at": "Date the beneficiary record was created.",
        "updated_at": "Date the beneficiary record was last updated.",
        "beneficiary_external_reference": "Beneficiary external reference.",
        "timestamp_extracted": "the date/time code processes",
        "record_format": "format of the record",
        "extract_url": "url of the data integrated from the website ",
        "table_name": "table name of athena has been created-currencycloud_accounts ",
        "date":"date of the record ingested from website"
    },
    "currencycloud_contacts": {
        "login_id": "The contact's Currencycloud login ID.",
        "id": "The contact's ID.",
        "your_reference": "The user-generated reference code given to the contact.",
        "first_name": "The contact's first name.",
        "last_name": "The contact's last name",
        "account_id": "The contact's account ID.",
        "account_name": "The account name.",
        "status": "Contact status - enabled allows the contact to conduct activity on the sub-account, not_enabled disables the contact.",
        "phone_number": "The contact's phone number.",
        "mobile_phone_number": "The contact's mobile phone number.",
        "locale": "The contact's locale.",
        "timezone": "The contact's timezone.",
        "email_address": "The contact's email address.",
        "date_of_birth": "The contact's date of birth.",
        "created_at": "The date the contact record was created.",
        "updated_at": "The date the contact record was last updated.",
        "timestamp_extracted": "the date/time code processes",
        "record_format": "format of the record",
        "extract_url": "url of the data integrated from the website ",
        "table_name": "table name of athena has been created-currencycloud_contacts ",
        "date":"date of the record ingested from website"
    },
    "currencycloud_conversions": {
        "id": "Conversion UUID",
        "account_id": "UUID of the Account that the Conversion belongs to.",
        "creator_contact_id": "UUID of the Contact that requested the conversion.",
        "short_reference": "A human readable unique trade indentifier, in the format YYYYMMDD-XXXXXX.",
        "settlement_date": "The date and time by which funds need to be available to settle the trade.",
        "conversion_date": "The date the conversion will be made.",
        "status": "Current conversion status.",
        "currency_pair": "Concatenated string of the two currencies traded, eg. USDEUR.",
        "buy_currency": "Three character ISO code for the currency being bought.",
        "sell_currency": "Three character ISO code for the currency being sold.",
        "fixed_side": "Which currency side is fixed - the buy or sell one.",
        "partner_buy_amount": "The amount of buy currency for a partner.",
        "partner_sell_amount": "The amount of sell currency for a partner.",
        "client_buy_amount": "The amount of buy currency for a client..",
        "client_sell_amount": "The amount of sell currency for a client.",
        "mid_market_rate": "The midpoint between the buy and sell rates.",
        "core_rate": "The market rate.",
        "partner_rate": "The market rate + Currencycloud commission (if applicable).",
        "client_rate": "The rate that will be returned to your customer after all spread has been applied.",
        "bank_account_type": "Bank account type.",
        "deposit_required": "Is a deposit required for the conversion?",
        "deposit_amount": "The amount of a deposit required.",
        "deposit_currency": "Three-letter ISO currency code for the currency the deposit is shown in.",
        "deposit_status": "Deposit status",
        "deposit_required_at": "Date by which deposit is required, format YYYY-MM-DDThh:mm:ss.SSSZ",
        "unallocated_funds": "The buy amount from the trade, that has not been allocated towards funding a payment.",
        "payment_ids": "The id of payments linked with this conversion - these payments wonâ€™t be processed until the conversion settles.",
        "unique_request_id": "User-generated idempotency key. Beneficial for request tracking / management.",
        "created_at": "Date the conversion was created.",
        "updated_at": "Date the conversion was last updated.",
        "timestamp_extracted": "the date/time code processes",
        "record_format": "format of the record",
        "extract_url": "url of the data integrated from the website ",
        "table_name": "table name of athena has been created-currencycloud_accounts ",
        "date":"date of the record ingested from website"
    },
    "currencycloud_funding_accounts": {
        "id": "The SSI's unique UUID.",
        "account_id": "The account ID the SSI is attached to. If money is paid to the account details, this account will be credited.",
        "account_number": "The account number to use when adding funds to the account.",
        "account_number_type": "The type of account number provided (e.g. account number of IBAN).",
        "account_holder_name": "The name of the account used to make a payment.",
        "bank_name": "The name of the bank the account is held with.",
        "bank_address": "The address of the bank the account is held with.",
        "bank_country": "The 2 digit ISO country code where the bank is based.",
        "currency": "The currency that should be sent to these account details.",
        "payment_type": "The type of payment. Regular - a local scheme such as Faster Payments in the UK. Priority - a priority payment e.g. FEDwire or SWIFT.",
        "routing_code": "The particular routing card for this account number.",
        "routing_code_type": "The type of routing number.",
        "created_at": "The date-time the SSI was added to the account.",
        "updated_at": "The date-time the SSI was last updated on the account.",
        "timestamp_extracted": "the date/time code processes",
        "record_format": "format of the record",
        "extract_url": "url of the data integrated from the website ",
        "table_name": "table name of athena has been created-currencycloud_funding_accounts ",
        "date":"date of the record ingested from website"
    },
    "currencycloud_payments": {
        "id": "Payment UUID",
        "amount": "Payment amount",
        "beneficiary_id": "Beneficiary UUID",
        "currency": "Payment currency",
        "reference": "Payment reference",
        "reason": "Reason for payment.",
        "status": "Payment status",
        "creator_contact_id": "Contact UUID of payment creator.",
        "payment_type": "Type of payment - priority(SWIFT) or regular(local).",
        "transferred_at": "Date of payment processing.",
        "authorisation_steps_required": "Number of approvals required for the payment.",
        "estimated_arrival": "Estimated date of payment.",
        "payment_date": "Payment date.",
        "last_updater_contact_id": "Contact UUID of user who last updated the record.",
        "short_reference": "Short reference code.",
        "conversion_id": "Conversion UUID",
        "failure_reason": "A reason for why the payment failed.",
        "payer_id": "Payer UUID",
        "payer_details_source": "If the payment is a 3rd party one, the value will be account. If it is a 4th party payment, the value will be payer.",
        "created_at": "Date and time of when the payment was created.",
        "updated_at": "Date and time of when the payment was last updated.",
        "payment_group_id": "Payment group ID.",
        "unique_request_id": "The user-generated idempotency key provided for the payment.",
        "failure_returned_amount": "The amount returned on failure.",
        "ultimate_beneficiary_name": "The name of the ultimate beneficiary.",
        "purpose_code": "Payment purpose code.",
        "fee_amount": "Fee amount",
        "fee_currency": "Currency code for fee.",
        "review_status": "Compliance review status - 'passed', 'in_review' or 'rejected'.",
        "timestamp_extracted": "the date/time code processes",
        "record_format": "format of the record",
        "extract_url": "url of the data integrated from the website ",
        "table_name": "table name of athena has been created-currencycloud_payments ",
        "date":"date of the record ingested from website"
    },
    "currencycloud_transactions": {
        "id": "Transaction ID",
        "balance_id": "Balance ID",
        "account_id": "Account ID",
        "currency": "Three-letter ISO currency code.",
        "amount": "Transaction amount",
        "balance_amount": "Balance amount",
        "type": "Type (debit or credit).",
        "action": "The action that triggered the transaction.",
        "related_entity_type": "The related entity type",
        "related_entity_id": "",
        "related_entity_short_reference": "Releated entity short reference.",
        "status": "Transaction status",
        "reason": "Reason",
        "settles_at": "Settlement date",
        "created_at": "Date the transaction record was created.",
        "updated_at": "",
        "completed_at": "Date the transaction record was last updated.",
        "timestamp_extracted": "the date/time code processes",
        "record_format": "format of the record",
        "extract_url": "url of the data integrated from the website ",
        "table_name": "table name of athena has been created-currencycloud_transactions",
        "date":"date of the record ingested from website"
    },
    "currencycloud_transfers": {
        "id": "Transfer UUID",
        "short_reference": "Short reference code.",
        "source_account_id": "Account UUID of the paying account.",
        "destination_account_id": "Account UUID of the receiving account.",
        "currency": "Three-letter ISO currency code.",
        "amount": "Transfer amount",
        "status": "Status of the transfer - completed, pending or cancelled.",
        "created_at": "Date/time the transfer was created.",
        "updated_at": "Date/time the transfer was last updated.",
        "completed_at": "Date/time the transfer was completed.",
        "creator_account_id": "Account UUID of transfer instructor.",
        "creator_contact_id": "Contact UUID of transfer instructor",
        "reason": "Reason for the transfer.",
        "unique_request_id": "The user-generated idempotency key given to the transfer.",
        "timestamp_extracted": "the date/time code processes",
        "record_format": "format of the record",
        "extract_url": "url of the data integrated from the website ",
        "table_name": "table name of athena has been created-currencycloud_transfers",
        "date":"date of the record ingested from website"
    },
    "currencycloud_rates": {
        "eurusd": "Euro to United States Dollar",
        "gbpusd": "Pound sterling equals to United States Dollar",
        "usdjpy": "United States Dollar to Japanese Yen",
        "audusd": "Australian Dollar to United States Dollar",
        "eurgbp": "Euro to Pound sterling",
        "usdcad": "United States Dollar to Canadian Dollar",
        "usdchf": "United States Dollar to Swiss Franc",
        "nzdchf": "New Zealand Dollar to Swiss Franc",
        "usdcny": "United States Dollar to Chinese Yuan",
        "usdhkd": "United States Dollar to Hong Kong Dollar",
        "timestamp_extracted": "the date/time code processes",
        "record_format": "format of the record",
        "extract_url": "url of the data integrated from the website ",
        "table_name": "table name of athena has been created-currencycloud_rates",
        "date":"date of the record ingested from website"
    },
}

schemas = {
    "currencycloud_accounts": {
        "id": "string",
        "account_name": "string",
        "brand": "string",
        "your_reference": "string",
        "status": "string",
        "street": "string",
        "city": "string",
        "state_or_province": "double",
        "country": "string",
        "postal_code": "string",
        "spread_table": "string",
        "legal_entity_type": "string",
        "created_at": "timestamp",
        "updated_at": "timestamp",
        "identification_type": "string",
        "identification_value": "double",
        "short_reference": "string",
        "api_trading": "boolean",
        "online_trading": "boolean",
        "phone_trading": "boolean",
        "process_third_party_funds": "boolean",
        "settlement_type": "string",
        "terms_and_conditions_accepted": "string",
        "agent_or_reliance": "boolean",
        "bank_account_verified": "string",
        "timestamp_extracted": "timestamp",
        "record_format": "string",
        "extract_url": "string",
        "table_name": "string",
        "date": "date"
    },
     "currencycloud_balances": {
        "id": "string",
        "account_id": "string",
        "currency": "string",
        "amount": "double",
        "created_at": "timestamp",
        "updated_at": "timestamp",
        "timestamp_extracted": "timestamp",
        "record_format": "string",
        "extract_url": "string",
        "table_name": "string",
        "date": "date"
    },
    "currencycloud_beneficiaries": {
        "id": "string",
        "bank_account_holder_name": "string",
        "name": "string",
        "email": "string",
        "payment_types": "string",
        "beneficiary_address": "string",
        "beneficiary_country": "string",
        "beneficiary_entity_type": "string",
        "beneficiary_company_name": "string",
        "beneficiary_first_name": "string",
        "beneficiary_last_name": "string",
        "beneficiary_city": "string",
        "beneficiary_postcode": "string",
        "beneficiary_state_or_province": "string",
        "beneficiary_date_of_birth": "string",
        "beneficiary_identification_type": "string",
        "beneficiary_identification_value": "string",
        "bank_country": "string",
        "bank_name": "string",
        "bank_account_type": "string",
        "currency": "string",
        "account_number": "string",
        "routing_code_type_1": "string",
        "routing_code_value_1": "string",
        "routing_code_type_2": "string",
        "routing_code_value_2": "string",
        "bic_swift": "string",
        "iban": "string",
        "default_beneficiary": "string",
        "creator_contact_id": "string",
        "bank_address": "string",
        "created_at": "timestamp",
        "updated_at": "timestamp",
        "beneficiary_external_reference": "string",
        "timestamp_extracted": "timestamp",
        "record_format": "string",
        "extract_url": "string",
        "table_name": "string",
        "date": "date"
    },
    "currencycloud_contacts": {
        "login_id": "string",
        "id": "string",
        "your_reference": "string",
        "first_name": "string",
        "last_name": "string",
        "account_id": "string",
        "account_name": "string",
        "status": "string",
        "phone_number": "string",
        "mobile_phone_number": "string",
        "locale": "string",
        "timezone": "string",
        "email_address": "string",
        "date_of_birth": "string",
        "created_at": "timestamp",
        "updated_at": "timestamp",
        "timestamp_extracted": "timestamp",
        "record_format": "string",
        "extract_url": "string",
        "table_name": "string",
        "date": "date"
    },
    "currencycloud_conversions": {
       "id": "string",
        "account_id": "string",
        "creator_contact_id": "string",
        "short_reference": "string",
        "settlement_date": "timestamp",
        "conversion_date": "timestamp",
        "status": "string",
        "currency_pair": "string",
        "buy_currency": "string",
        "sell_currency": "string",
        "fixed_side": "string",
        "partner_buy_amount": "int",
        "partner_sell_amount": "int",
        "client_buy_amount": "double",
        "client_sell_amount": "double",
        "mid_market_rate": "double",
        "core_rate": "double",
        "partner_rate": "string",
        "client_rate": "double",
        "bank_account_type": "string",
        "deposit_required": "boolean",
        "deposit_amount": "int",
        "deposit_currency": "string",
        "deposit_status": "string",
        "deposit_required_at": "string",
        "unallocated_funds": "double",
        "payment_ids": "string",
        "unique_request_id": "string",
        "created_at": "timestamp",
        "updated_at": "timestamp",
        "timestamp_extracted": "timestamp",
        "record_format": "string",
        "extract_url": "string",
        "table_name": "string",
        "date": "date"
    },
    "currencycloud_funding_accounts": {
        "id": "string",
        "account_id": "string",
        "account_number": "string",
        "account_number_type": "string",
        "account_holder_name": "string",
        "bank_name": "string",
        "bank_address": "string",
        "bank_country": "string",
        "currency": "string",
        "payment_type": "string",
        "routing_code": "string",
        "routing_code_type": "string",
        "created_at": "timestamp",
        "updated_at": "timestamp",
        "timestamp_extracted": "timestamp",
        "record_format": "string",
        "extract_url": "string",
        "table_name": "string",
        "date": "date"
    },
    "currencycloud_payments": {
        "id": "string",
        "amount": "string",
        "beneficiary_id": "string",
        "currency": "string",
        "reference": "string",
        "reason": "string",
        "status": "string",
        "creator_contact_id": "string",
        "payment_type": "string",
        "transferred_at": "string",
        "authorisation_steps_required": "string",
        "estimated_arrival": "string",
        "payment_date": "string",
        "last_updater_contact_id": "string",
        "short_reference": "string",
        "conversion_id": "string",
        "failure_reason": "string",
        "payer_id": "string",
        "payer_details_source": "string",
        "created_at": "timestamp",
        "updated_at": "timestamp",
        "payment_group_id": "string",
        "unique_request_id": "string",
        "failure_returned_amount": "string",
        "ultimate_beneficiary_name": "string",
        "purpose_code": "string",
        "fee_amount": "string",
        "fee_currency": "string",
        "review_status": "string",
        "timestamp_extracted": "timestamp",
        "record_format": "string",
        "extract_url": "string",
        "table_name": "string",
        "date": "date"
    },
    "currencycloud_transactions": {
        "id": "string",
        "balance_id": "string",
        "account_id": "string",
        "currency": "string",
        "amount": "double",
        "balance_amount": "double",
        "type": "string",
        "action": "string",
        "related_entity_type": "string",
        "related_entity_id": "string",
        "related_entity_short_reference": "string",
        "status": "string",
        "reason": "string",
        "settles_at": "string",
        "created_at": "timestamp",
        "updated_at": "timestamp",
        "completed_at": "string",
        "timestamp_extracted": "timestamp",
        "record_format": "string",
        "extract_url": "string",
        "table_name": "string",
        "date": "date"
    },
    "currencycloud_transfers": {
        "id": "string",
        "short_reference": "string",
        "source_account_id": "string",
        "destination_account_id": "string",
        "currency": "string",
        "amount": "double",
        "status": "string",
        "created_at": "timestamp",
        "updated_at": "timestamp",
        "completed_at": "string",
        "creator_account_id": "string",
        "creator_contact_id": "string",
        "unique_request_id": "string",
        "timestamp_extracted": "timestamp",
        "record_format": "string",
        "extract_url": "string",
        "table_name": "string",
        "date": "date"
    },
    "currencycloud_rates": {
        "eurusd": "string",
        "gbpusd": "string",
        "usdjpy": "string",
        "audusd": "string",
        "eurgbp": "string",
        "usdcad": "string",
        "usdchf": "string",
        "nzdchf": "string",
        "usdcny": "string",
        "usdhkd": "string",
        "timestamp_extracted": "timestamp",
        "record_format": "string",
        "extract_url": "string",
        "table_name": "string",
        "date": "date"
    },
}